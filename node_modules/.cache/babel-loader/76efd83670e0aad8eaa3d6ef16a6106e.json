{"ast":null,"code":"var _jsxFileName = \"/home/intruder/Desktop/slack-clone/src/Chat.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport db from \"./firebase\";\nimport Message from \"./Message\";\nimport ChatInput from \"./ChatInput\";\n\nfunction Chat() {\n  const {\n    roomId\n  } = useParams();\n  const [roomDetails, setRoomDetails] = useState(null);\n  const [roomMessages, setRoomMessages] = useState([]);\n  useEffect(() => {\n    if (roomId) {\n      db.collection(\"rooms\").doc(roomId).onSnapshot(snapshot => setRoomDetails(snapshot.data()));\n    }\n\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => setRoomMessages(snapshot.docs.map(doc => doc.data())));\n  }, [roomId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_headerLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"chat_channelName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"# \", roomDetails === null || roomDetails === void 0 ? void 0 : roomDetails.name), /*#__PURE__*/React.createElement(StarBorderOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_headerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), \" Details\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, roomMessages.map((data, i) => /*#__PURE__*/React.createElement(Message, {\n    message: data.message,\n    timestamp: data.timestamp,\n    user: data.user,\n    userImage: data.userImage,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))), console.log(roomDetails === null || roomDetails === void 0 ? void 0 : roomDetails.name), /*#__PURE__*/React.createElement(ChatInput, {\n    channelName: roomDetails === null || roomDetails === void 0 ? void 0 : roomDetails.name,\n    channelId: roomId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/intruder/Desktop/slack-clone/src/Chat.js"],"names":["React","useEffect","useState","useParams","StarBorderOutlinedIcon","InfoOutlinedIcon","db","Message","ChatInput","Chat","roomId","roomDetails","setRoomDetails","roomMessages","setRoomMessages","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","name","i","message","timestamp","user","userImage","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport db from \"./firebase\";\nimport Message from \"./Message\";\nimport ChatInput from \"./ChatInput\";\n\nfunction Chat() {\n  const { roomId } = useParams();\n  const [roomDetails, setRoomDetails] = useState(null);\n  const [roomMessages, setRoomMessages] = useState([]);\n  useEffect(() => {\n    if (roomId) {\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .onSnapshot((snapshot) => setRoomDetails(snapshot.data()));\n    }\n    db.collection(\"rooms\")\n      .doc(roomId)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) =>\n        setRoomMessages(snapshot.docs.map((doc) => doc.data()))\n      );\n  }, [roomId]);\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat_header\">\n        <div className=\"chat_headerLeft\">\n          <h4 className=\"chat_channelName\">\n            <strong># {roomDetails?.name}</strong>\n            <StarBorderOutlinedIcon />\n          </h4>\n        </div>\n        <div className=\"chat_headerRight\">\n          <p>\n            <InfoOutlinedIcon /> Details\n          </p>\n        </div>\n      </div>\n      <div className=\"chat_message\">\n        {roomMessages.map((data, i) => (\n          <Message\n            message={data.message}\n            timestamp={data.timestamp}\n            user={data.user}\n            userImage={data.userImage}\n            key={i}\n          />\n        ))}\n      </div>\n\n      {console.log(roomDetails?.name)}\n      <ChatInput channelName={roomDetails?.name} channelId={roomId} />\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}