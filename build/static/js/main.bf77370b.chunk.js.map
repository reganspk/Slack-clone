{"version":3,"sources":["firebase.js","Message.js","StateProvider.js","ChatInput.js","Chat.js","reducer.js","Login.js","Header.js","SidebarOption.js","Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Message","message","timestamp","user","userImage","className","src","alt","Date","toDate","toUTCString","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","ChatInput","channelName","channelId","useState","input","setInput","onChange","e","target","placeholder","toLowerCase","type","onClick","preventDefault","console","log","collection","doc","add","FieldValue","serverTimestamp","displayName","photoURL","Chat","roomId","useParams","roomDetails","setRoomDetails","roomMessages","setRoomMessages","useEffect","onSnapshot","snapshot","data","orderBy","docs","map","name","i","key","actionTypes","state","action","Login","dispatch","Button","signInWithPopup","then","result","catch","error","alert","Header","Avatar","SidebarOption","Icon","title","id","addChannelOption","history","useHistory","prompt","push","Sidebar","channels","setChannels","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","channel","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gdAYMA,EADcC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,YACjBC,EAAOX,IAASW,OAChBC,EAAW,IAAIZ,IAASW,KAAKE,mBAGpBd,I,MCGAe,MAjBf,YAA2D,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UAC3C,OACE,yBAAKC,UAAU,WACb,yBAAKC,IAAKF,EAAWG,IAAI,KACzB,yBAAKF,UAAU,gBACb,4BACGF,EAAM,IACP,0BAAME,UAAU,qBACb,IAAIG,KAAJ,OAASN,QAAT,IAASA,OAAT,EAASA,EAAWO,UAAUC,gBAGnC,2BAAIT,MCZCU,G,MAAeC,2BACfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC/CC,IAGQI,EAAgB,kBAAMC,qBAAWV,ICmC/BW,MArCf,YAAgD,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,UAAa,EACnBC,mBAAS,IADU,mBACtCC,EADsC,KAC/BC,EAD+B,OAE1BP,IAAVjB,EAFoC,oBAEpCA,KAmBT,OACE,yBAAKE,UAAU,aACb,8BACE,2BACEa,MAAOQ,EACPE,SAVa,SAACC,GACpBF,EAASE,EAAEC,OAAOZ,QAUZa,YAAW,0BAAcR,QAAd,IAAcA,OAAd,EAAcA,EAAaS,iBAExC,4BAAQC,KAAK,SAASC,QA1BR,SAACL,GACnBA,EAAEM,iBACFC,QAAQC,IAAIb,GACRA,GACFvC,EAAGqD,WAAW,SAASC,IAAIf,GAAWc,WAAW,YAAYE,IAAI,CAC/DvC,QAASyB,EACTxB,UAAWhB,IAASU,UAAU6C,WAAWC,kBACzCvC,KAAMA,EAAKwC,YACXvC,UAAWD,EAAKyC,WAGpBjB,EAAS,MAeL,WC0BOkB,MApDf,WAAiB,IACPC,EAAWC,cAAXD,OADM,EAEwBrB,mBAAS,MAFjC,mBAEPuB,EAFO,KAEMC,EAFN,OAG0BxB,mBAAS,IAHnC,mBAGPyB,EAHO,KAGOC,EAHP,KAmBd,OAfAC,qBAAU,WACJN,GACF7D,EAAGqD,WAAW,SACXC,IAAIO,GACJO,YAAW,SAACC,GAAD,OAAcL,EAAeK,EAASC,WAEtDtE,EAAGqD,WAAW,SACXC,IAAIO,GACJR,WAAW,YACXkB,QAAQ,YAAa,OACrBH,YAAW,SAACC,GAAD,OACVH,EAAgBG,EAASG,KAAKC,KAAI,SAACnB,GAAD,OAASA,EAAIgB,gBAElD,CAACT,IAGF,yBAAKzC,UAAU,QACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,oBACZ,4CAAW2C,QAAX,IAAWA,OAAX,EAAWA,EAAaW,MACxB,kBAAC,IAAD,QAGJ,yBAAKtD,UAAU,oBACb,2BACE,kBAAC,IAAD,MADF,cAKJ,yBAAKA,UAAU,gBACZ6C,EAAaQ,KAAI,SAACH,EAAMK,GAAP,OAChB,kBAAC,EAAD,CACE3D,QAASsD,EAAKtD,QACdC,UAAWqD,EAAKrD,UAChBC,KAAMoD,EAAKpD,KACXC,UAAWmD,EAAKnD,UAChByD,IAAKD,QAKVxB,QAAQC,IAAR,OAAYW,QAAZ,IAAYA,OAAZ,EAAYA,EAAaW,MAC1B,kBAAC,EAAD,CAAWpC,YAAW,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAaW,KAAMnC,UAAWsB,M,yBCrD/CgB,EACD,WAcGhD,EAZC,SAACiD,EAAOC,GAEtB,OADA5B,QAAQC,IAAI2B,GACJA,EAAO/B,MACb,KAAK6B,EACH,OAAO,2BACFC,GADL,IAEE5D,KAAM6D,EAAO7D,OAEjB,QACE,OAAO4D,ICoBEE,MA5Bf,WAAkB,IAAD,EACW7C,IADX,mBACD8C,GADC,WAgBf,OACE,yBAAK7D,UAAU,SACb,yBAAKA,UAAU,mBACb,yBAAKC,IAAI,oBAAoBC,IAAI,KACjC,4DACA,sDACA,kBAAC4D,EAAA,EAAD,CAAQjC,QApBC,WACbrC,EACGuE,gBAAgBtE,GAChBuE,MAAK,SAACC,GACLlC,QAAQC,IAAIiC,GACZJ,EAAS,CACPjC,KAAM6B,EACN3D,KAAMmE,EAAOnE,UAGhBoE,OAAM,SAACC,GACNC,MAAMD,EAAMvE,cASZ,0B,0ECEOyE,MAvBf,WAAmB,IAAD,EACGtD,IAAVjB,EADO,oBACPA,KACT,OACE,yBAAKE,UAAU,UACb,yBAAKA,UAAU,eACb,kBAACsE,EAAA,EAAD,CACEtE,UAAU,gBACVE,IAAG,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAMwC,YACXrC,IAAG,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAMyC,WAEb,kBAAC,IAAD,OAEF,yBAAKvC,UAAU,iBACb,kBAAC,IAAD,MACA,2BAAO0B,YAAY,aAGrB,yBAAK1B,UAAU,iBACf,kBAAC,IAAD,Q,iECeSuE,MAnCf,YAA+D,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,iBAClCC,EAAUC,cAiBhB,OACE,yBACE7E,UAAU,gBACV6B,QAAS8C,EAZM,WACjB,IAAMzD,EAAc4D,OAAO,iCACvB5D,GACFtC,EAAGqD,WAAW,SAASE,IAAI,CACzBmB,KAAMpC,KAXU,WAChBwD,EACFE,EAAQG,KAAR,gBAAsBL,IAEtBE,EAAQG,KAAKN,KAiBZD,GAAQ,kBAACA,EAAD,CAAMxE,UAAU,uBACxBwE,EACC,4BAAKC,GAEL,wBAAIzE,UAAU,yBACZ,0BAAMA,UAAU,sBAAhB,KACCyE,K,sKC6BIO,OA9Cf,WAAoB,IAAD,EACe5D,mBAAS,IADxB,mBACV6D,EADU,KACAC,EADA,OAEEnE,IAAVjB,EAFQ,oBAERA,KAYT,OAXAiD,qBAAU,WACRnE,EAAGqD,WAAW,SAASe,YAAW,SAACC,GAAD,OAChCiC,EACEjC,EAASG,KAAKC,KAAI,SAACnB,GAAD,MAAU,CAC1BwC,GAAIxC,EAAIwC,GACRpB,KAAMpB,EAAIgB,OAAOI,eAItB,IAGD,yBAAKtD,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,8CACA,4BACE,kBAAC,IAAD,MADF,OAEGF,QAFH,IAEGA,OAFH,EAEGA,EAAMwC,cAGX,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAekC,KAAMW,IAAmBV,MAAM,YAC9C,kBAAC,EAAD,CAAeD,KAAMY,IAAWX,MAAM,wBACtC,kBAAC,EAAD,CAAeD,KAAMa,IAAYZ,MAAM,gBACvC,kBAAC,EAAD,CAAeD,KAAMc,IAAoBb,MAAM,oBAC/C,kBAAC,EAAD,CAAeD,KAAMe,IAAed,MAAM,yBAC1C,kBAAC,EAAD,CAAeD,KAAMgB,KAAUf,MAAM,SACrC,kBAAC,EAAD,CAAeD,KAAMiB,KAAchB,MAAM,iBACzC,kBAAC,EAAD,CAAeD,KAAMkB,KAAgBjB,MAAM,cAC3C,6BACA,kBAAC,EAAD,CAAeD,KAAMmB,KAAgBlB,MAAM,aAC3C,6BACA,kBAAC,EAAD,CAAeD,KAAMoB,KAASnB,MAAM,cAAcE,kBAAgB,IAEjEM,EAAS5B,KAAI,SAACwC,EAAStC,GAAV,OACZ,kBAAC,EAAD,CAAeC,IAAKD,EAAGkB,MAAOoB,EAAQvC,KAAMoB,GAAImB,EAAQnB,U,SCrBjDoB,OA5Bf,WAAgB,IAAD,EACgB/E,IADhB,mBACJjB,EADI,KACJA,KACT,OAFa,KAGX,yBAAKE,UAAU,OACb,kBAAC,KAAD,KACIF,EAGA,oCACE,kBAAC,EAAD,MACA,yBAAKE,UAAU,YACb,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+F,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,2CAXR,kBAAC,EAAD,SCHUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAe7F,aPVS,CAC1BZ,KAAM,MOSuCW,QAASA,GAClD,kBAAC,GAAD,QAGJ+F,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5C,MAAK,SAAA6C,GACJA,EAAaC,gBAEd5C,OAAM,SAAAC,GACLpC,QAAQoC,MAAMA,EAAMvE,c","file":"static/js/main.bf77370b.chunk.js","sourcesContent":["import firebase from \"firebase\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyChpBFbQCtoVpPI-J5fZGIGKDY0ho1UpD4\",\n  authDomain: \"slack-cloning.firebaseapp.com\",\n  databaseURL: \"https://slack-cloning.firebaseio.com\",\n  projectId: \"slack-cloning\",\n  storageBucket: \"slack-cloning.appspot.com\",\n  messagingSenderId: \"186640194106\",\n  appId: \"1:186640194106:web:0202e2e9d1efab6fa5b303\",\n  measurementId: \"G-MGXMBFDRFZ\",\n};\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import React from \"react\";\nimport \"./Message.css\";\n\nfunction Message({ message, timestamp, user, userImage }) {\n  return (\n    <div className=\"message\">\n      <img src={userImage} alt=\"\" />\n      <div className=\"message_info\">\n        <h4>\n          {user}{\" \"}\n          <span className=\"message_timestamp\">\n            {new Date(timestamp?.toDate()).toUTCString()}\n          </span>\n        </h4>\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Message;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\nexport const useStateValue = () => useContext(StateContext);\n","import React, { useState } from \"react\";\nimport \"./ChatInput.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction ChatInput({ channelName, channelId }) {\n  const [input, setInput] = useState(\"\");\n  const [{ user }] = useStateValue();\n  const sendMessage = (e) => {\n    e.preventDefault();\n    console.log(channelId);\n    if (channelId) {\n      db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\n        message: input,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        user: user.displayName,\n        userImage: user.photoURL,\n      });\n    }\n    setInput(\"\");\n  };\n  const handleChange = (e) => {\n    setInput(e.target.value);\n    //console.log(input);\n  };\n  //console.log(input, \"the value from the below the handle change\");\n  return (\n    <div className=\"chatInput\">\n      <form>\n        <input\n          value={input}\n          onChange={handleChange}\n          placeholder={`Message #${channelName?.toLowerCase()}`}\n        />\n        <button type=\"submit\" onClick={sendMessage}>\n          SEND\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatInput;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport db from \"./firebase\";\nimport Message from \"./Message\";\nimport ChatInput from \"./ChatInput\";\n\nfunction Chat() {\n  const { roomId } = useParams();\n  const [roomDetails, setRoomDetails] = useState(null);\n  const [roomMessages, setRoomMessages] = useState([]);\n  useEffect(() => {\n    if (roomId) {\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .onSnapshot((snapshot) => setRoomDetails(snapshot.data()));\n    }\n    db.collection(\"rooms\")\n      .doc(roomId)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) =>\n        setRoomMessages(snapshot.docs.map((doc) => doc.data()))\n      );\n  }, [roomId]);\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat_header\">\n        <div className=\"chat_headerLeft\">\n          <h4 className=\"chat_channelName\">\n            <strong># {roomDetails?.name}</strong>\n            <StarBorderOutlinedIcon />\n          </h4>\n        </div>\n        <div className=\"chat_headerRight\">\n          <p>\n            <InfoOutlinedIcon /> Details\n          </p>\n        </div>\n      </div>\n      <div className=\"chat_message\">\n        {roomMessages.map((data, i) => (\n          <Message\n            message={data.message}\n            timestamp={data.timestamp}\n            user={data.user}\n            userImage={data.userImage}\n            key={i}\n          />\n        ))}\n      </div>\n\n      {console.log(roomDetails?.name)}\n      <ChatInput channelName={roomDetails?.name} channelId={roomId} />\n    </div>\n  );\n}\n\nexport default Chat;\n","export const initialState = {\n  user: null,\n};\nexport const actionTypes = {\n  SET_USER: \"SET_USER\",\n};\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import React from \"react\";\nimport \"./Login.css\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from \"./reducer\";\n\nfunction Login() {\n  const [state, dispatch] = useStateValue();\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        console.log(result);\n        dispatch({\n          type: actionTypes.SET_USER,\n          user: result.user,\n        });\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login_container\">\n        <img src=\"/images/slack.jpg\" alt=\"\" />\n        <h1>Sign in to Developer Gang HQ</h1>\n        <p>developergang.slack.com</p>\n        <Button onClick={signIn}>Sign In with Google</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./Header.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Header() {\n  const [{ user }] = useStateValue();\n  return (\n    <div className=\"header\">\n      <div className=\"header_left\">\n        <Avatar\n          className=\"header_avatar\"\n          alt={user?.displayName}\n          src={user?.photoURL}\n        />\n        <AccessTimeIcon />\n      </div>\n      <div className=\"header_search\">\n        <SearchIcon />\n        <input placeholder=\"Search \" />\n      </div>\n\n      <div className=\"header_right\"></div>\n      <HelpOutlineIcon />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./SidebarOption.css\";\nimport { useHistory } from \"react-router-dom\";\nimport db from \"./firebase\";\n\nfunction SidebarOption({ Icon, title, id, addChannelOption }) {\n  const history = useHistory();\n  const selectChannel = () => {\n    if (id) {\n      history.push(`/room/${id}`);\n    } else {\n      history.push(title);\n    }\n  };\n  const addChannel = () => {\n    const channelName = prompt(\"Please enter the channel name\");\n    if (channelName) {\n      db.collection(\"rooms\").add({\n        name: channelName,\n      });\n    }\n  };\n\n  return (\n    <div\n      className=\"sidebarOption\"\n      onClick={addChannelOption ? addChannel : selectChannel}\n    >\n      {Icon && <Icon className=\"sidebarOption_icon\" />}\n      {Icon ? (\n        <h3>{title}</h3>\n      ) : (\n        <h3 className=\"sidebarOption_channel\">\n          <span className=\"sidebarOption_hash\">#</span>\n          {title}\n        </h3>\n      )}\n    </div>\n  );\n}\nexport default SidebarOption;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Sidebar.css\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport SidebarOption from \"./SidebarOption\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport db from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Sidebar() {\n  const [channels, setChannels] = useState([]);\n  const [{ user }] = useStateValue();\n  useEffect(() => {\n    db.collection(\"rooms\").onSnapshot((snapshot) =>\n      setChannels(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          name: doc.data().name,\n        }))\n      )\n    );\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar_header\">\n        <div className=\"sidebar_info\">\n          <h2>Developer Gang</h2>\n          <h3>\n            <FiberManualRecordIcon />\n            {user?.displayName}\n          </h3>\n        </div>\n        <CreateIcon />\n      </div>\n      <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n      <SidebarOption Icon={InboxIcon} title=\"Mention & Reactions\" />\n      <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\n      <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel Browser\" />\n      <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\" />\n      <SidebarOption Icon={AppsIcon} title=\"Apps\" />\n      <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\n      <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\n      <hr />\n      <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\n      <hr />\n      <SidebarOption Icon={AddIcon} title=\"Add Channel\" addChannelOption />\n\n      {channels.map((channel, i) => (\n        <SidebarOption key={i} title={channel.name} id={channel.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport Chat from \"./Chat\";\nimport Login from \"./Login\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n            <Header />\n            <div className=\"app_body\">\n              <Sidebar />\n              <Switch>\n                <Route path=\"/room/:roomId\">\n                  <Chat />\n                </Route>\n                <Route>\n                  <h1>Welcome</h1>\n                </Route>\n              </Switch>\n            </div>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}